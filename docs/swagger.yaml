basePath: /api/v1
definitions:
  request.CaptchaVerify:
    properties:
      captcha:
        type: string
      captchaId:
        type: string
    type: object
host: 10.0.24.5:8888
info:
  contact:
    email: me@razeen.me
    name: www.topgoer.com
    url: https://www.topgoer.com
  description: 图像识别服务
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.topgoer.com
  title: 接口文档
  version: 0.0.1
paths:
  /base/captcha:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":10001,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 生成验证码
      tags:
      - Base
  /base/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: 验证验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CaptchaVerify'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":10001,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 验证验证码
      tags:
      - Base
  /detection/imgDetection:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":10001,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      summary: 上传文件示例
      tags:
      - Detection
  /user/getUserList:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":10001,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 获取用户列表
      tags:
      - User
  /user/login:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":10001,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":10001,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - User
swagger: "2.0"
